{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seventy-nine/Desktop/robofriendz/src/app.js\";\nimport React, { Component } from 'react';\nimport CardList from './cardlist.js';\nimport SearchBox from './SearchBox.js';\nimport { robots } from './robots.js'; //import { render } from '@testing-library/react';\n\nclass app extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: robots,\n      searchField: ''\n    };\n  }\n\n  onSearchChange(event) {\n    console.log(event);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RoboFriendz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: this.state.robots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default app;\n/* STATE is simply an object that describes the app\nand the STATEthat describes our app here is the robot and whatever is entered into the searchbox\nthe STATE is able to change. we are able to change the value of the searchbox and what robot array mean\nin other word 'what gets displayed'. PROPS are simply things that come out of STATE.\nA parent feeds STATE into a child component as soon as a child component recieves a STATE it becomes a property and that property can never change.\nthe parent tells it what the STATE is and the child recieves it as a Prop in this case thr prop is robots*/","map":{"version":3,"sources":["/Users/seventy-nine/Desktop/robofriendz/src/app.js"],"names":["React","Component","CardList","SearchBox","robots","app","constructor","state","searchField","onSearchChange","event","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAAQC,MAAR,QAAqB,aAArB,C,CACA;;AAIA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACRH,MAAAA,MAAM,EAAEA,MADA;AAERI,MAAAA,WAAW,EAAE;AAFL,KAAZ;AAIH;;AAEDC,EAAAA,cAAc,CAACC,KAAD,EAAO;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;;AAEDG,EAAAA,MAAM,GACN;AACI,wBACA;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAI,KAAKJ;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAI,KAAKF,KAAL,CAAWH;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAQJ;;AAxBwB;;AA0B5B,eAAeC,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './cardlist.js';\nimport SearchBox from './SearchBox.js';\nimport {robots} from './robots.js';\n//import { render } from '@testing-library/react';\n\n\n\nclass app extends Component {\n    constructor(){\n        super()\n        this.state ={\n            robots: robots,\n            searchField: ''\n        }\n    } \n\n    onSearchChange(event){\n        console.log(event);\n\n    }\n\n    render()\n    {\n        return (\n        <div className ='tc'>\n          <h1>RoboFriendz</h1>\n          <SearchBox searchChange = {this.onSearchChange}/>\n          <CardList robots = {this.state.robots}/>\n        </div>\n        \n               );\n   };\n}\nexport default app; \n\n/* STATE is simply an object that describes the app\nand the STATEthat describes our app here is the robot and whatever is entered into the searchbox\nthe STATE is able to change. we are able to change the value of the searchbox and what robot array mean\nin other word 'what gets displayed'. PROPS are simply things that come out of STATE.\nA parent feeds STATE into a child component as soon as a child component recieves a STATE it becomes a property and that property can never change.\nthe parent tells it what the STATE is and the child recieves it as a Prop in this case thr prop is robots*/\n"]},"metadata":{},"sourceType":"module"}